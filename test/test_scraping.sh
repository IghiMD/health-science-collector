#!/bin/bash

# Farby pre v√Ωstup
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Nastavenie pracovn√©ho adres√°ra na adres√°r so skriptom
cd "$(dirname "$0")"

echo -e "${BLUE}==============================================${NC}"
echo -e "${BLUE}      TESTOVANIE ZBERAƒåOV ZDRAVOTN√çCKYCH     ${NC}"
echo -e "${BLUE}              A VEDECK√ùCH D√ÅT                ${NC}"
echo -e "${BLUE}==============================================${NC}"
echo

# Funkcia na testovanie konkr√©tneho Python modulu
test_module() {
    local module_name=$1
    local function_name=$2
    
    echo -e "${YELLOW}Testujem modul:${NC} $module_name"
    echo -e "${YELLOW}Funkcia:${NC} $function_name"
    
    # Vytvor√≠me doƒçasn√Ω Python skript pre testovanie
    cat > temp_test.py << EOF
import sys
from $module_name import $function_name
from utils.logger import logger
import json

try:
    # Vypneme ≈°tandardn√Ω v√Ωstup loggera poƒças testovania
    logger.handlers = []

    # Spust√≠me funkciu
    results = $function_name()
    
    # Vyp√≠≈°eme poƒçet v√Ωsledkov
    print(f"SUCCESS:{len(results)}")
    
    # Vyp√≠≈°eme prv√Ω v√Ωsledok ako uk√°≈æku (ak existuje)
    if results and len(results) > 0:
        print("SAMPLE:" + json.dumps(results[0], ensure_ascii=False))
except Exception as e:
    print(f"ERROR:{str(e)}")
    sys.exit(1)
EOF

    # Spust√≠me testovac√≠ skript
    result=$(python3 temp_test.py)
    
    # Spracujeme v√Ωsledok
    if [[ $result == ERROR:* ]]; then
        error_msg=${result#ERROR:}
        echo -e "${RED}‚ùå Testovanie zlyhalo: $error_msg${NC}"
        echo
        success=false
    else
        count=$(echo "$result" | grep "SUCCESS:" | cut -d':' -f2)
        sample=$(echo "$result" | grep "SAMPLE:" | cut -d':' -f2-)
        
        echo -e "${GREEN}‚úÖ Test √∫spe≈°n√Ω${NC}"
        echo -e "${GREEN}üìä Poƒçet z√≠skan√Ωch ƒçl√°nkov:${NC} $count"
        
        if [ ! -z "$sample" ]; then
            echo -e "${GREEN}üì∞ Uk√°≈æka prv√©ho ƒçl√°nku:${NC}"
            echo "$sample" | python3 -m json.tool
        fi
        echo
        success=true
    fi
    
    # Odstr√°nime doƒçasn√Ω skript
    rm temp_test.py
    
    return $success
}

# Pr√≠prava zhrnutia v√Ωsledkov
declare -A results
total_sources=0
successful_sources=0

echo -e "${BLUE}Zaƒç√≠nam testovanie modulov zberu d√°t...${NC}"
echo

# Test 1: Hlavn√Ω news_scraper
echo -e "${BLUE}==============================================${NC}"
if test_module "utils.news_scraper" "scrape_all"; then
    results["Hlavn√Ω news_scraper"]="‚úÖ √öspe≈°n√©"
    ((successful_sources++))
else
    results["Hlavn√Ω news_scraper"]="‚ùå Zlyhalo"
fi
((total_sources++))

# Test 2: SITA scraper
echo -e "${BLUE}==============================================${NC}"
if test_module "utils.scraper_sita_rss" "fetch_sita_articles"; then
    results["SITA scraper"]="‚úÖ √öspe≈°n√©"
    ((successful_sources++))
else
    results["SITA scraper"]="‚ùå Zlyhalo"
fi
((total_sources++))

# Test 3: SME direct scraper
echo -e "${BLUE}==============================================${NC}"
if test_module "utils.scraper_sme_direct" "fetch_sme_direct"; then
    results["SME direct scraper"]="‚úÖ √öspe≈°n√©"
    ((successful_sources++))
else
    results["SME direct scraper"]="‚ùå Zlyhalo"
fi
((total_sources++))

# Test 4: TASR RSS scraper
echo -e "${BLUE}==============================================${NC}"
if test_module "utils.scraper_tasr_rss_ai" "fetch_tasr_articles"; then
    results["TASR RSS scraper"]="‚úÖ √öspe≈°n√©"
    ((successful_sources++))
else
    results["TASR RSS scraper"]="‚ùå Zlyhalo"
fi
((total_sources++))

# Zobraz s√∫hrnn√© v√Ωsledky
echo -e "${BLUE}==============================================${NC}"
echo -e "${BLUE}               S√öHRNN√â V√ùSLEDKY              ${NC}"
echo -e "${BLUE}==============================================${NC}"
echo

for source in "${!results[@]}"; do
    echo -e "${YELLOW}$source:${NC} ${results[$source]}"
done

echo
echo -e "${GREEN}√öspe≈°n√© testy:${NC} $successful_sources z $total_sources"

# Hodnotenie √∫spe≈°nosti
success_rate=$((successful_sources * 100 / total_sources))
echo -e "${BLUE}√öspe≈°nos≈•:${NC} $success_rate%"

# Z√°vereƒçn√© zhrnutie
echo
if [ $success_rate -eq 100 ]; then
    echo -e "${GREEN}üéâ V≈°etky zdroje funguj√∫ spr√°vne!${NC}"
elif [ $success_rate -ge 75 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è V√§ƒç≈°ina zdrojov funguje, ale niektor√© zlyhali.${NC}"
else
    echo -e "${RED}‚ùå V√Ωrazn√© probl√©my so zberom d√°t. Skontroluj moduly.${NC}"
fi

echo
echo -e "${BLUE}==============================================${NC}"
echo -e "${BLUE}              KONIEC TESTOVANIA              ${NC}"
echo -e "${BLUE}==============================================${NC}"
